数组是一种线性表数据结构，
.它用一组连续的内存空间，来存储一组具有相同类型的数据。
.连续的内存空间和相同类型的数据。
 优点：随机访问
 缺点：删除，插入非常的低效，为了保证数据的连续性，就需要做大量的数据搬移工作。

线性表：数据排成像一条线一样的结构。

线性表数据结构：数组，链表，队列，栈
非线性表数据结构：树，图

低效的插入和删除
.插入操作：假设数组的长度为 n，现在，如果我们需要将一个数据插入到数组中的第 k 个位置。为了把第 k 个位置腾出来，给新来的数据，我们需要将第 k～n 这部分的元素都顺序地往后挪一位。
.删除操作：我们可以先记录下已经删除的数据。每次的删除操作并不是真正地搬移数据，只是记录数据已经被删除。当数组没有更多空间存储数据时，我们再触发执行一次真正的删除操作，这样就大大减少了删除操作导致的数据搬移。

ArrayList最大的优势就是可以将很多数组操作的细节封装起来。
优势：支持动态扩容。
在创建ArrayList的时候，事先指定数据大小，可以省掉很多次内存申请和数据搬移操作

数组为什么要从0开始编号？
.从 1 开始编号，每次随机访问数组元素都多了一次减法运算，对于 CPU 来说，就是多了一次减法指令。
.C 语言设计者用 0 开始计数数组下标。

基于数组的原理引出 JVM 的标记清除垃圾回收算法的核心理念
